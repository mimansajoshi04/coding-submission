class Solution {

    Stack<String> stack = new Stack<>();

    private void displayStack() {
        System.out.println(this.stack);
    }

    private void check() {
    
        while (stack.size() >= 3 && stack.get(stack.size() - 1).equals("#")
                && stack.get(stack.size() - 2).equals("#")
                && !stack.get(stack.size() - 3).equals("#")) {
            stack.pop();
            stack.pop();
            stack.pop();
            stack.push("#");
        }
    }

    private boolean isValid() {
        return stack.size() == 1 && stack.peek().equals("#");
    }

    public boolean isValidSerialization(String preorder) {
        String[] given = preorder.split(",");

        for (String s : given) {
            stack.push(s);
            check();
        }

        return isValid();
    }
}
