/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    private int height(TreeNode node){
        if(node==null)
            return -1;

        var left_height = this.height(node.left)+1;
        var right_height = this.height(node.right)+1;
        
        return Math.max(left_height,right_height);
    }

    public boolean isBalanced(TreeNode root) {

        if(root==null)
            return true;

        if(root.left==null && root.right==null)
            return true;

        var left_height = this.height(root.left);
        var right_height = this.height(root.right);

        if(Math.abs(left_height-right_height)>1)
            return false;

        if(!this.isBalanced(root.left) || !this.isBalanced(root.right))
            return false;

        return true;

    }
}
